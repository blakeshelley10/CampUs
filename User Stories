User stories:

  - As a club organizer, I want to be able to make an annoucement
    about my club/event, to involve more people.
    
  - As a student, I want to be able to view other club/event announcements,
    so that I can get more involved on campus.
    
  - As a student, I want to be able to search through club/event announcements,
    so that I can find the events I'm looking for / care about.
    
  - As an event organizer, I want to be able to include images about my event, to better communicate the event
    to possible attendees.
    
  - As a site visitor, I want to be able to login, so I can save my preferences.

  - As a site visitor, I want my login experience to be as easy as possible.

  - As a site visitor, I want my password to be securely stored.

What issues did your team planned to address:
  
  - The main issues our team decided to tackle this sprint include being able to login/register in the front end, and having a way to store that in the back end. We focused on the basics of learning golang and typescript/html in order to create a basic starting framework for both frontend and backend. We also planned on a working API so that the frontend and backend could communicate with eachother. 
  
Which ones were successfully completed:
  
  - The issue of logging in and registering were sucessfully complete and implemented for both front and backend. That being said our group ran into quite a few issues getting the two linked, so the functionality works for both seaparately, but we just have not figured out how to make requests between the two. The login user interface has been created and a basic backend API for storing user information in a database is also functional (sending and recieving JSON data).
  
  
Which ones didn't and why?:
  
   - We could also list the above one here because we haven't technically got it to work exactly as it should in final implementation. The problem relates to us trying to get the front and back end linked. We haven't figured out how to create the overall linking structure between golang and angular yet (making http requests). The backend also doesn't store passwords securely. Therefore, the login process still needs some work.

Github Link:
https://github.com/blakeshelley10/CampUs/

Backend/Frontend Video Links:
    - Frontend: https://youtu.be/tJDi-0SbcF0
    - Backend:
